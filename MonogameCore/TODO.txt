DONE:
-Resolution independence, grid system, basic camera;
-Basic gameobject, components, parent-child, etc;
-Basic input, window, gamestates, other managment;
-Basic graphics: sprites, UI, simple particles;
-More architecture work;
-UI manager;
-Collision detection architecture;
-Timers;
-FSM;
-Static GameObjects;
-Graphics: layers;
-Raytracing;
-Efficient collision detection: quadtree;
TODO:
-Debuger
-Better error handling;
-Graphics: animation, tiling, atlas;
-Collision: layer, raytracing using quadtree;
-Mulithreaded task system;
-Openworld loading: seamless load in chunks, multithread;
-Procedural graphics;
-Text font scaling;
-Resolution bigger than screen bugs(mouse);
-Better sound;
-level editor
-bones animation
-Tagengine using binary search
-get renderer and collider from GetComponent<T>